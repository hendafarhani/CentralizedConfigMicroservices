#Associates the value of PORT attribute if it is passed in args or a random port number
server.port=${PORT:0}

#Application's name to be registered in eureka discovery service dashboard
spring.application.name=products

#Url of discovery server
eureka.client.serviceUrl.defaultZone=http://localhost:8010/eureka

#Enable devtools to restart the server automatically each time there are code updates
spring.devtools.restart.enabled=true

#To associate a random id for each running instance of the same microservice
#Use this command to create a running instance of microservice:
#mvn spring-boot:run -Dspring-boot.run.arguments=--spring.application.instance_id=ANY_VALUE
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

#Add connection properties to mysql database:
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/productDetails?serverTimezone=UTC
spring.datasource.username=hendafarhani
spring.datasource.password=user
spring.jpa.hibernate.ddl-auto=validate

# ===============================
# FLYWAY
# ===============================
flyway.url=jdbc:mysql://localhost:3306
flyway.schemas=productDetails
flyway.user=hendafarhani
flyway.password=user

# This property tells the microservice's instance to load configurations from configserver
# at startup.
# "optional" is used to tell that the startup must be pursued normally even if the connection
# with configsever is failed.
spring.config.import=optional:configserver:http://localhost:8080

#RabbitMQ's connection credentials
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest